# 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у
# пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.

text1 = 'текст текст текст текст'
digit1 = 101
print(f'text {text1}')
print('число {}'.format(digit1))
text1 = input('введите текст: ')
digit1 = int(input('введите число: '))

print(f'text {text1}')
print('число {}'.format(digit1))

i = input('Следующее задание (нажмите Enter)')
print()
print()

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и
# выведите в формате чч:мм:сс. Используйте форматирование строк.

seconds = int(input('введите время в секундах: '))
hours = seconds // 3600
minutes = seconds % 3600 // 60
seconds -= hours * 3600 + minutes * 60
print(f'время в формате чч:мм:сс : {hours}:{minutes}:{seconds}')

i = input('Следующее задание (нажмите Enter)')
print()
print()

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

digit_n = input('введите целое положительное число n: ')
len_N = len(digit_n)
digit_n = int(digit_n)
summ_NNNNNN = digit_n * (3 + 2 * 10 ** len_N + 10 ** (2 * len_N))
print('сумма чисел n + nn + nnn: {0} + {0}{0} + {0}{0}{0} = {1}'.format(digit_n, summ_NNNNNN))

i = input('Следующее задание (нажмите Enter)')
print()
print()

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.

digit_n = input('введите целое положительное число: ')
len_N = len(digit_n) - 1
digit_n = int(digit_n)
initial_n = digit_n
max_Didi = 1
while len_N != -1:
    Current_Didi = digit_n // (10 ** len_N)
    digit_n = digit_n % (10 ** len_N)
    if max_Didi < Current_Didi:
        max_Didi = Current_Didi
    len_N -= 1
    continue
print(f'самая большая цифра в числе {initial_n} - {max_Didi}')

i = input('Следующее задание (нажмите Enter)')
print()
print()

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите,
# с каким финансовым результатом работает фирма (прибыль — выручка больше издержек,
# или убыток — издержки больше выручки). Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в
# расчете на одного сотрудника.

revenue = int(input('введите выручку фирмы: '))
costs = int(input('введите издержки фирмы: '))
fin_result = revenue - costs
if fin_result > 0:
    print(f'фирма отработала с прибылью {fin_result} уе')
    print('рентабельность выручки {:.1%}'.format(fin_result / revenue ))
    staff_qty = int(input('сколько на фирме сотрудников? : '))
    print('прибыль фирмы в расчете на одного сотрудника {:.2f} уе'.format(fin_result / staff_qty))

elif fin_result < 0:
    print('фирма отработала с убытком {} уе'.format(-fin_result))
else:
    print(f'фирма отработала с нулевой прибылью')

i = input('Следующее задание (нажмите Enter)')
print()
print()

# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего. Требуется определить
# номер дня, на который результат спортсмена составит не менее b километров. Программа должна
# принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
#
# Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.

import math

firstDay = int(input('введите результват первого дня: '))
goal = int(input('введите целевой результат: '))
days = 1 + math.ceil(math.log(goal / firstDay, 1.1))  # считаем количество дней заранее))))
print('результат :')
if days < 2:
    print(f'1-й день: {firstDay} км')
    print(f'Ответ: уже на 1-й день спортсмен достиг результата — не менее {goal} км ')

else:
    print(days)
    cur_Day = 1
    while cur_Day <= days:
        print('{}-й день: {:.2f} км'.format(cur_Day,firstDay * 1.1 ** (cur_Day - 1)))
        cur_Day += 1
    print(f'Ответ: на {days}-й день спортсмен достиг результата — не менее {goal} км ')
